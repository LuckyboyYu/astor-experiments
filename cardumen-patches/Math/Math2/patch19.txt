--- /original/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	
+++ /fixed/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	
@@ -47,7 +47,7 @@
 			return upper;
 		}
 		final double mu = getNumericalMean();
-		final double sigma = org.apache.commons.math3.util.FastMath.sqrt(getNumericalVariance());
+		final double sigma = cumulativeProbability(lower);
 		final boolean chebyshevApplies = !(((((java.lang.Double.isInfinite(mu)) || (java.lang.Double.isNaN(mu))) || (java.lang.Double.isInfinite(sigma))) || (java.lang.Double.isNaN(sigma))) || (sigma == 0.0));
 		if (chebyshevApplies) {
 			double k = org.apache.commons.math3.util.FastMath.sqrt(((1.0 - p) / p));
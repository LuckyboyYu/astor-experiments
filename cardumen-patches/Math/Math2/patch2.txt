--- /original/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	
+++ /fixed/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	
@@ -48,7 +48,7 @@
 		}
 		final double mu = getNumericalMean();
 		final double sigma = org.apache.commons.math3.util.FastMath.sqrt(getNumericalVariance());
-		final boolean chebyshevApplies = !(((((java.lang.Double.isInfinite(mu)) || (java.lang.Double.isNaN(mu))) || (java.lang.Double.isInfinite(sigma))) || (java.lang.Double.isNaN(sigma))) || (sigma == 0.0));
+		final boolean chebyshevApplies = lower < lower;
 		if (chebyshevApplies) {
 			double k = org.apache.commons.math3.util.FastMath.sqrt(((1.0 - p) / p));
 			double tmp = mu - (k * sigma);
--- /original/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	
+++ /fixed/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	
@@ -206,7 +206,7 @@
 			sigma *= java.lang.Math.exp(java.lang.Math.min(1.0, (((((normps) / (chiN)) - 1.0) * (cs)) / (damps))));
 			double bestFitness = fitness[arindex[0]];
 			double worstFitness = fitness[arindex[((arindex.length) - 1)]];
-			if (bestValue > bestFitness) {
+			if ((stopFitness) != 0) {
 				bestValue = bestFitness;
 				lastResult = optimum;
 				optimum = new org.apache.commons.math3.optimization.PointValuePair(fitfun.repairAndDecode(bestArx.getColumn(0)), (isMinimize ? bestFitness : -bestFitness));
{
    "buggyStatement": "if (((((pingPong) == 0) && ((n0 - i0) > 3)) && ((work[((4 * n0) - 1)]) <= ((org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2) * diagMax))) && ((work[((4 * n0) - 2)]) <= ((org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2) * (sigma)))) {\n\tint split = i0 - 1;\n\tdiagMax = work[(4 * i0)];\n\toffDiagMin = work[((4 * i0) + 2)];\n\tdouble previousEMin = work[((4 * i0) + 3)];\n\tfor (int i = 4 * i0; i < ((4 * n0) - 16); i += 4) {\n\t\tif (((work[(i + 3)]) <= ((org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2) * (work[i]))) || ((work[(i + 2)]) <= ((org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2) * (sigma)))) {\n\t\t\twork[(i + 2)] = -(sigma);\n\t\t\tsplit = i / 4;\n\t\t\tdiagMax = 0;\n\t\t\toffDiagMin = work[(i + 6)];\n\t\t\tpreviousEMin = work[(i + 7)];\n\t\t}else {\n\t\t\tdiagMax = java.lang.Math.max(diagMax, work[(i + 4)]);\n\t\t\toffDiagMin = java.lang.Math.min(offDiagMin, work[(i + 2)]);\n\t\t\tpreviousEMin = java.lang.Math.min(previousEMin, work[(i + 3)]);\n\t\t}\n\t}\n\twork[((4 * n0) - 2)] = offDiagMin;\n\twork[((4 * n0) - 1)] = previousEMin;\n\ti0 = split + 1;\n}\nfixed statement= org.apache.commons.math.linear.EigenDecompositionImpl.this.splitTolerance = splitTolerance\ngeneration= 4\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.apache.commons.math.linear.EigenDecompositionImpl\nline= 1139\nlineSuspiciousness= 1\noriginal statement= work[(i + k)] = work[(j - k)]",
    "diffpatch": "--- /local/scr/mtufano/Math/80/b/similar-local-types-embeddings/3/AstorMain-b/src/default/org/apache/commons/math/linear/EigenDecompositionImpl.java\t\n+++ /local/scr/mtufano/Math/80/b/similar-local-types-embeddings/3/AstorMain-b/src/variant-470/org/apache/commons/math/linear/EigenDecompositionImpl.java\t\n@@ -520,6 +520,7 @@\n \t\t\t\t}\n \t\t\t\tn0 = goodStep(i0, n0);\n \t\t\t\tpingPong = 1 - (pingPong);\n+\t\t\t\torg.apache.commons.math.linear.EigenDecompositionImpl.this.splitTolerance = splitTolerance;\n \t\t\t\tif (((((pingPong) == 0) && ((n0 - i0) > 3)) && ((work[((4 * n0) - 1)]) <= ((org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2) * diagMax))) && ((work[((4 * n0) - 2)]) <= ((org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2) * (sigma)))) {\n \t\t\t\t\tint split = i0 - 1;\n \t\t\t\t\tdiagMax = work[(4 * i0)];\n@@ -678,7 +679,7 @@\n \t\t\tfor (int i = 0; i < j; i += 4) {\n \t\t\t\tfor (int k = 0; k < 4; k += step) {\n \t\t\t\t\tfinal double tmp = work[(i + k)];\n-\t\t\t\t\twork[(i + k)] = work[(j - k)];\n+\t\t\t\t\torg.apache.commons.math.linear.EigenDecompositionImpl.this.splitTolerance = splitTolerance;\n \t\t\t\t\twork[(j - k)] = tmp;\n \t\t\t\t}\n \t\t\t\tj -= 4;\n\n--- /local/scr/mtufano/Math/80/b/similar-local-types-embeddings/3/AstorMain-b/src/default/org/apache/commons/math/linear/EigenDecompositionImpl.java\t\n+++ /local/scr/mtufano/Math/80/b/similar-local-types-embeddings/3/AstorMain-b/src/variant-470/org/apache/commons/math/linear/EigenDecompositionImpl.java\t\n@@ -520,6 +520,7 @@\n \t\t\t\t}\n \t\t\t\tn0 = goodStep(i0, n0);\n \t\t\t\tpingPong = 1 - (pingPong);\n+\t\t\t\torg.apache.commons.math.linear.EigenDecompositionImpl.this.splitTolerance = splitTolerance;\n \t\t\t\tif (((((pingPong) == 0) && ((n0 - i0) > 3)) && ((work[((4 * n0) - 1)]) <= ((org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2) * diagMax))) && ((work[((4 * n0) - 2)]) <= ((org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2) * (sigma)))) {\n \t\t\t\t\tint split = i0 - 1;\n \t\t\t\t\tdiagMax = work[(4 * i0)];\n@@ -678,7 +679,7 @@\n \t\t\tfor (int i = 0; i < j; i += 4) {\n \t\t\t\tfor (int k = 0; k < 4; k += step) {\n \t\t\t\t\tfinal double tmp = work[(i + k)];\n-\t\t\t\t\twork[(i + k)] = work[(j - k)];\n+\t\t\t\t\torg.apache.commons.math.linear.EigenDecompositionImpl.this.splitTolerance = splitTolerance;\n \t\t\t\t\twork[(j - k)] = tmp;\n \t\t\t\t}\n \t\t\t\tj -= 4;",
    "generation": 4,
    "ingredients": null,
    "patch": "org.apache.commons.math.linear.EigenDecompositionImpl.this.splitTolerance = splitTolerance\ngeneration= 4\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.apache.commons.math.linear.EigenDecompositionImpl\nline= 1139\nlineSuspiciousness= 1\noriginal statement= work[(i + k)] = work[(j - k)]\nfixed statement= org.apache.commons.math.linear.EigenDecompositionImpl.this.splitTolerance = splitTolerance",
    "patchLocation": {
        "className": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "line": 899,
        "lineSuspiciousness": 0.243
    },
    "scope": "LOCAL",
    "time": "941",
    "type": "InsertBeforeOp",
    "variant": 470
}
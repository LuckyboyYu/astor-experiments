--- /local/scr/mtufano/Math/2/b/similar-global-types-embeddings/1/AstorMain-b/src/default/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	
+++ /local/scr/mtufano/Math/2/b/similar-global-types-embeddings/1/AstorMain-b/src/variant-107/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	
@@ -57,8 +57,8 @@
 			}
 			k = 1.0 / k;
 			tmp = mu + (k * sigma);
-			if (tmp < upper) {
-				upper = ((int) (java.lang.Math.ceil(tmp))) - 1;
+			if ((p < 0.0) || (p > 1.0)) {
+				throw new org.apache.commons.math3.exception.OutOfRangeException(p, 0, 1);
 			}
 		}
 		return solveInverseCumulativeProbability(p, lower, upper);
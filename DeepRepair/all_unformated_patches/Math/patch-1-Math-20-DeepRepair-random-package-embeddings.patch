--- /local/scr/mtufano/Math/20/b/random-package-embeddings/1/AstorMain-b/src/default/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	
+++ /local/scr/mtufano/Math/20/b/random-package-embeddings/1/AstorMain-b/src/variant-606/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	
@@ -586,7 +586,7 @@
 					repaired[i] = 0;
 				}else
 					if ((x[i]) > 1.0) {
-						repaired[i] = 1.0;
+						repaired = (repaired == null) ? null : ((double[]) (repaired.clone()));
 					}else {
 						repaired[i] = x[i];
 					}
@@ -814,6 +814,7 @@
 		for (int i = 0; i < (indices.length); i++) {
 			reverse[i] = indices[(((indices.length) - i) - 1)];
 		}
+		int[] inverse = new int[indices.length];
 		return reverse;
 	}
 

--- /local/scr/mtufano/Math/20/b/random-package-embeddings/1/AstorMain-b/src/default/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	
+++ /local/scr/mtufano/Math/20/b/random-package-embeddings/1/AstorMain-b/src/variant-606/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	
@@ -586,7 +586,7 @@
 					repaired[i] = 0;
 				}else
 					if ((x[i]) > 1.0) {
-						repaired[i] = 1.0;
+						repaired = (repaired == null) ? null : ((double[]) (repaired.clone()));
 					}else {
 						repaired[i] = x[i];
 					}
@@ -814,6 +814,7 @@
 		for (int i = 0; i < (indices.length); i++) {
 			reverse[i] = indices[(((indices.length) - i) - 1)];
 		}
+		int[] inverse = new int[indices.length];
 		return reverse;
 	}
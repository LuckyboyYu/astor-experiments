--- /local/scr/mtufano/Math/63/b/similar-local-types-embeddings/2/AstorMain-b/src/default/org/apache/commons/math/util/MathUtils.java	
+++ /local/scr/mtufano/Math/63/b/similar-local-types-embeddings/2/AstorMain-b/src/variant-79/org/apache/commons/math/util/MathUtils.java	
@@ -181,7 +181,7 @@
 	}
 
 	public static boolean equals(double x, double y) {
-		return ((java.lang.Double.isNaN(x)) && (java.lang.Double.isNaN(y))) || (x == y);
+		return (org.apache.commons.math.util.MathUtils.equals(x, y, 1)) || ((org.apache.commons.math.util.FastMath.abs((y - x))) <= (SAFE_MIN));
 	}
 
 	public static boolean equalsIncludingNaN(double x, double y) {
@@ -221,6 +221,7 @@
 		if ((x.length) != (y.length)) {
 			return false;
 		}
+		long ret;
 		for (int i = 0; i < (x.length); ++i) {
 			if (!(org.apache.commons.math.util.MathUtils.equals(x[i], y[i]))) {
 				return false;

--- /local/scr/mtufano/Math/63/b/similar-local-types-embeddings/2/AstorMain-b/src/default/org/apache/commons/math/util/MathUtils.java	
+++ /local/scr/mtufano/Math/63/b/similar-local-types-embeddings/2/AstorMain-b/src/variant-79/org/apache/commons/math/util/MathUtils.java	
@@ -181,7 +181,7 @@
 	}
 
 	public static boolean equals(double x, double y) {
-		return ((java.lang.Double.isNaN(x)) && (java.lang.Double.isNaN(y))) || (x == y);
+		return (org.apache.commons.math.util.MathUtils.equals(x, y, 1)) || ((org.apache.commons.math.util.FastMath.abs((y - x))) <= (SAFE_MIN));
 	}
 
 	public static boolean equalsIncludingNaN(double x, double y) {
@@ -221,6 +221,7 @@
 		if ((x.length) != (y.length)) {
 			return false;
 		}
+		long ret;
 		for (int i = 0; i < (x.length); ++i) {
 			if (!(org.apache.commons.math.util.MathUtils.equals(x[i], y[i]))) {
 				return false;
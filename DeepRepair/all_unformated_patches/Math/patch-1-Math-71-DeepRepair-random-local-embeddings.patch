--- /local/scr/mtufano/Math/71/b/random-local-embeddings/3/AstorMain-b/src/default/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java	
+++ /local/scr/mtufano/Math/71/b/random-local-embeddings/3/AstorMain-b/src/variant-279/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java	
@@ -47,6 +47,7 @@
 			initialStep = -1.0;
 		}else {
 			initialStep = initialStepSize;
+			initialStep = -1.0;
 		}
 	}
 

--- /local/scr/mtufano/Math/71/b/random-local-embeddings/3/AstorMain-b/src/default/org/apache/commons/math/ode/events/EventState.java	
+++ /local/scr/mtufano/Math/71/b/random-local-embeddings/3/AstorMain-b/src/variant-279/org/apache/commons/math/ode/events/EventState.java	
@@ -71,6 +71,7 @@
 		try {
 			forward = interpolator.isForward();
 			final double t1 = interpolator.getCurrentTime();
+			pendingEvent = true;
 			final int n = java.lang.Math.max(1, ((int) (java.lang.Math.ceil(((java.lang.Math.abs((t1 - (t0)))) / (maxCheckInterval))))));
 			final double h = (t1 - (t0)) / n;
 			double ta = t0;
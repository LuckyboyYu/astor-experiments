--- /local/scr/mtufano/Math/2/b/similar-package-types-default/1/AstorMain-b/src/default/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	
+++ /local/scr/mtufano/Math/2/b/similar-package-types-default/1/AstorMain-b/src/variant-707/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	
@@ -43,8 +43,8 @@
 			lower -= 1;
 		}
 		int upper = getSupportUpperBound();
-		if (p == 1.0) {
-			return upper;
+		if ((p < 0.0) || (p > 1.0)) {
+			throw new org.apache.commons.math3.exception.OutOfRangeException(p, 0, 1);
 		}
 		final double mu = getNumericalMean();
 		final double sigma = org.apache.commons.math3.util.FastMath.sqrt(getNumericalVariance());
@@ -57,8 +57,8 @@
 			}
 			k = 1.0 / k;
 			tmp = mu + (k * sigma);
-			if (tmp < upper) {
-				upper = ((int) (java.lang.Math.ceil(tmp))) - 1;
+			if (p == 1.0) {
+				return upper;
 			}
 		}
 		return solveInverseCumulativeProbability(p, lower, upper);

--- /local/scr/mtufano/Math/2/b/similar-package-types-default/1/AstorMain-b/src/default/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	
+++ /local/scr/mtufano/Math/2/b/similar-package-types-default/1/AstorMain-b/src/variant-707/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	
@@ -43,8 +43,8 @@
 			lower -= 1;
 		}
 		int upper = getSupportUpperBound();
-		if (p == 1.0) {
-			return upper;
+		if ((p < 0.0) || (p > 1.0)) {
+			throw new org.apache.commons.math3.exception.OutOfRangeException(p, 0, 1);
 		}
 		final double mu = getNumericalMean();
 		final double sigma = org.apache.commons.math3.util.FastMath.sqrt(getNumericalVariance());
@@ -57,8 +57,8 @@
 			}
 			k = 1.0 / k;
 			tmp = mu + (k * sigma);
-			if (tmp < upper) {
-				upper = ((int) (java.lang.Math.ceil(tmp))) - 1;
+			if (p == 1.0) {
+				return upper;
 			}
 		}
 		return solveInverseCumulativeProbability(p, lower, upper);
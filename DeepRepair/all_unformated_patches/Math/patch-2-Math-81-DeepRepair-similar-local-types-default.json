{
    "buggyStatement": "if ((end - start) > 2) {\n\tb2 = (work[(nn - 13)]) / (work[(nn - 15)]);\n\ta2 = a2 + b2;\n\tfor (int i4 = nn - 17; i4 >= (((4 * start) + 2) + (pingPong)); i4 -= 4) {\n\t\tif (b2 == 0.0) {\n\t\t\tbreak;\n\t\t}\n\t\tb1 = b2;\n\t\tif ((work[i4]) > (work[(i4 - 2)])) {\n\t\t\treturn ;\n\t\t}\n\t\tb2 = b2 * ((work[i4]) / (work[(i4 - 2)]));\n\t\ta2 = a2 + b2;\n\t\tif (((100 * (java.lang.Math.max(b2, b1))) < a2) || (cnst1 < a2)) {\n\t\t\tbreak;\n\t\t}\n\t}\n\ta2 = cnst3 * a2;\n}",
    "diffpatch": "--- /local/scr/mtufano/Math/81/b/similar-local-types-default/3/AstorMain-b/src/default/org/apache/commons/math/linear/EigenDecompositionImpl.java\t\n+++ /local/scr/mtufano/Math/81/b/similar-local-types-default/3/AstorMain-b/src/variant-369/org/apache/commons/math/linear/EigenDecompositionImpl.java\t\n@@ -987,24 +987,8 @@\n \t\t\t\t\t\t\treturn ;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tdouble a2 = ((work[(np - 8)]) / b2) * (1 + ((work[(np - 4)]) / b1));\n-\t\t\t\t\t\tif ((end - start) > 2) {\n-\t\t\t\t\t\t\tb2 = (work[(nn - 13)]) / (work[(nn - 15)]);\n-\t\t\t\t\t\t\ta2 = a2 + b2;\n-\t\t\t\t\t\t\tfor (int i4 = nn - 17; i4 >= (((4 * start) + 2) + (pingPong)); i4 -= 4) {\n-\t\t\t\t\t\t\t\tif (b2 == 0.0) {\n-\t\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\tb1 = b2;\n-\t\t\t\t\t\t\t\tif ((work[i4]) > (work[(i4 - 2)])) {\n-\t\t\t\t\t\t\t\t\treturn ;\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\tb2 = b2 * ((work[i4]) / (work[(i4 - 2)]));\n-\t\t\t\t\t\t\t\ta2 = a2 + b2;\n-\t\t\t\t\t\t\t\tif (((100 * (java.lang.Math.max(b2, b1))) < a2) || (cnst1 < a2)) {\n-\t\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\ta2 = cnst3 * a2;\n+\t\t\t\t\t\tif ((cachedD) == null) {\n+\t\t\t\t\t\t\tcachedD = org.apache.commons.math.linear.MatrixUtils.createRealDiagonalMatrix(realEigenvalues);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (a2 < cnst1) {\n \t\t\t\t\t\t\ttau = (gam * (1 - (java.lang.Math.sqrt(a2)))) / (1 + a2);",
    "generation": 368,
    "ingredients": null,
    "patch": "if ((cachedD) == null) {\n\tcachedD = org.apache.commons.math.linear.MatrixUtils.createRealDiagonalMatrix(realEigenvalues);\n}",
    "patchLocation": {
        "className": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "line": 1543,
        "lineSuspiciousness": 0.577
    },
    "scope": "LOCAL",
    "time": "2324",
    "type": "ReplaceOp",
    "variant": 369
}
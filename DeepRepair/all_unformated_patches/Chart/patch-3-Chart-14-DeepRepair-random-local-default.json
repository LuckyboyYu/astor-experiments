{
    "buggyStatement": "if (parent instanceof org.jfree.chart.plot.CategoryPlot) {\n\torg.jfree.chart.plot.CategoryPlot cp = ((org.jfree.chart.plot.CategoryPlot) (parent));\n\tresult = cp.getRangeAxis(index);\n}\nfixed statement= if ((org.jfree.chart.plot.CategoryPlot.this.foregroundRangeMarkers) != null) {\n\tjava.util.Set keys = org.jfree.chart.plot.CategoryPlot.this.foregroundRangeMarkers.keySet();\n\tjava.util.Iterator iterator = keys.iterator();\n\twhile (iterator.hasNext()) {\n\t\tjava.lang.Integer key = ((java.lang.Integer) (iterator.next()));\n\t\tclearRangeMarkers(key.intValue());\n\t} \n\torg.jfree.chart.plot.CategoryPlot.this.foregroundRangeMarkers.clear();\n}\ngeneration= 1\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.XYPlot\nline= 2481\nlineSuspiciousness= 0.5\noriginal statement= return removeRangeMarker(0, marker, layer)\nfixed statement= return false\ngeneration= 50\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.CategoryPlot\nline= 2415\nlineSuspiciousness= 0.5\noriginal statement= return removeRangeMarker(index, marker, layer, true)\nfixed statement= return false\ngeneration= 74\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.CategoryPlot\nline= 2122\nlineSuspiciousness= 0.5\noriginal statement= return removeDomainMarker(0, marker, layer)\nfixed statement= return false\ngeneration= 92\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.XYPlot\nline= 2265\nlineSuspiciousness= 0.5\noriginal statement= return removeDomainMarker(index, marker, layer, true)",
    "diffpatch": "--- /local/scr/mtufano/Chart/14/b/random-local-default/2/AstorMain-b/src/default/org/jfree/chart/plot/CategoryPlot.java\t\n+++ /local/scr/mtufano/Chart/14/b/random-local-default/2/AstorMain-b/src/variant-138/org/jfree/chart/plot/CategoryPlot.java\t\n@@ -333,9 +333,14 @@\n \t\t}\n \t\tif (result == null) {\n \t\t\torg.jfree.chart.plot.Plot parent = getParent();\n-\t\t\tif (parent instanceof org.jfree.chart.plot.CategoryPlot) {\n-\t\t\t\torg.jfree.chart.plot.CategoryPlot cp = ((org.jfree.chart.plot.CategoryPlot) (parent));\n-\t\t\t\tresult = cp.getRangeAxis(index);\n+\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.foregroundRangeMarkers) != null) {\n+\t\t\t\tjava.util.Set keys = org.jfree.chart.plot.CategoryPlot.this.foregroundRangeMarkers.keySet();\n+\t\t\t\tjava.util.Iterator iterator = keys.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tjava.lang.Integer key = ((java.lang.Integer) (iterator.next()));\n+\t\t\t\t\tclearRangeMarkers(key.intValue());\n+\t\t\t\t} \n+\t\t\t\torg.jfree.chart.plot.CategoryPlot.this.foregroundRangeMarkers.clear();\n \t\t\t}\n \t\t}\n \t\treturn result;\n@@ -916,7 +921,7 @@\n \t}\n \n \tpublic boolean removeDomainMarker(org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeDomainMarker(0, marker, layer);\n+\t\treturn false;\n \t}\n \n \tpublic boolean removeDomainMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n@@ -1052,7 +1057,7 @@\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeRangeMarker(index, marker, layer, true);\n+\t\treturn false;\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer, boolean notify) {\n\n--- /local/scr/mtufano/Chart/14/b/random-local-default/2/AstorMain-b/src/default/org/jfree/chart/plot/XYPlot.java\t\n+++ /local/scr/mtufano/Chart/14/b/random-local-default/2/AstorMain-b/src/variant-138/org/jfree/chart/plot/XYPlot.java\t\n@@ -906,7 +906,7 @@\n \t}\n \n \tpublic boolean removeDomainMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeDomainMarker(index, marker, layer, true);\n+\t\treturn org.jfree.chart.plot.XYPlot.this.rangeCrosshairVisible;\n \t}\n \n \tpublic boolean removeDomainMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer, boolean notify) {\n@@ -1014,7 +1014,7 @@\n \t}\n \n \tpublic boolean removeRangeMarker(org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeRangeMarker(0, marker, layer);\n+\t\treturn false;\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n\n--- /local/scr/mtufano/Chart/14/b/random-local-default/2/AstorMain-b/src/default/org/jfree/chart/plot/XYPlot.java\t\n+++ /local/scr/mtufano/Chart/14/b/random-local-default/2/AstorMain-b/src/variant-138/org/jfree/chart/plot/XYPlot.java\t\n@@ -906,7 +906,7 @@\n \t}\n \n \tpublic boolean removeDomainMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeDomainMarker(index, marker, layer, true);\n+\t\treturn org.jfree.chart.plot.XYPlot.this.rangeCrosshairVisible;\n \t}\n \n \tpublic boolean removeDomainMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer, boolean notify) {\n@@ -1014,7 +1014,7 @@\n \t}\n \n \tpublic boolean removeRangeMarker(org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeRangeMarker(0, marker, layer);\n+\t\treturn false;\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n\n--- /local/scr/mtufano/Chart/14/b/random-local-default/2/AstorMain-b/src/default/org/jfree/chart/plot/CategoryPlot.java\t\n+++ /local/scr/mtufano/Chart/14/b/random-local-default/2/AstorMain-b/src/variant-138/org/jfree/chart/plot/CategoryPlot.java\t\n@@ -333,9 +333,14 @@\n \t\t}\n \t\tif (result == null) {\n \t\t\torg.jfree.chart.plot.Plot parent = getParent();\n-\t\t\tif (parent instanceof org.jfree.chart.plot.CategoryPlot) {\n-\t\t\t\torg.jfree.chart.plot.CategoryPlot cp = ((org.jfree.chart.plot.CategoryPlot) (parent));\n-\t\t\t\tresult = cp.getRangeAxis(index);\n+\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.foregroundRangeMarkers) != null) {\n+\t\t\t\tjava.util.Set keys = org.jfree.chart.plot.CategoryPlot.this.foregroundRangeMarkers.keySet();\n+\t\t\t\tjava.util.Iterator iterator = keys.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tjava.lang.Integer key = ((java.lang.Integer) (iterator.next()));\n+\t\t\t\t\tclearRangeMarkers(key.intValue());\n+\t\t\t\t} \n+\t\t\t\torg.jfree.chart.plot.CategoryPlot.this.foregroundRangeMarkers.clear();\n \t\t\t}\n \t\t}\n \t\treturn result;\n@@ -916,7 +921,7 @@\n \t}\n \n \tpublic boolean removeDomainMarker(org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeDomainMarker(0, marker, layer);\n+\t\treturn false;\n \t}\n \n \tpublic boolean removeDomainMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n@@ -1052,7 +1057,7 @@\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeRangeMarker(index, marker, layer, true);\n+\t\treturn false;\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer, boolean notify) {\n\n--- /local/scr/mtufano/Chart/14/b/random-local-default/2/AstorMain-b/src/default/org/jfree/chart/plot/CategoryPlot.java\t\n+++ /local/scr/mtufano/Chart/14/b/random-local-default/2/AstorMain-b/src/variant-138/org/jfree/chart/plot/CategoryPlot.java\t\n@@ -333,9 +333,14 @@\n \t\t}\n \t\tif (result == null) {\n \t\t\torg.jfree.chart.plot.Plot parent = getParent();\n-\t\t\tif (parent instanceof org.jfree.chart.plot.CategoryPlot) {\n-\t\t\t\torg.jfree.chart.plot.CategoryPlot cp = ((org.jfree.chart.plot.CategoryPlot) (parent));\n-\t\t\t\tresult = cp.getRangeAxis(index);\n+\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.foregroundRangeMarkers) != null) {\n+\t\t\t\tjava.util.Set keys = org.jfree.chart.plot.CategoryPlot.this.foregroundRangeMarkers.keySet();\n+\t\t\t\tjava.util.Iterator iterator = keys.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tjava.lang.Integer key = ((java.lang.Integer) (iterator.next()));\n+\t\t\t\t\tclearRangeMarkers(key.intValue());\n+\t\t\t\t} \n+\t\t\t\torg.jfree.chart.plot.CategoryPlot.this.foregroundRangeMarkers.clear();\n \t\t\t}\n \t\t}\n \t\treturn result;\n@@ -916,7 +921,7 @@\n \t}\n \n \tpublic boolean removeDomainMarker(org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeDomainMarker(0, marker, layer);\n+\t\treturn false;\n \t}\n \n \tpublic boolean removeDomainMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n@@ -1052,7 +1057,7 @@\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeRangeMarker(index, marker, layer, true);\n+\t\treturn false;\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer, boolean notify) {",
    "generation": 1,
    "ingredients": null,
    "patch": "if ((org.jfree.chart.plot.CategoryPlot.this.foregroundRangeMarkers) != null) {\n\tjava.util.Set keys = org.jfree.chart.plot.CategoryPlot.this.foregroundRangeMarkers.keySet();\n\tjava.util.Iterator iterator = keys.iterator();\n\twhile (iterator.hasNext()) {\n\t\tjava.lang.Integer key = ((java.lang.Integer) (iterator.next()));\n\t\tclearRangeMarkers(key.intValue());\n\t} \n\torg.jfree.chart.plot.CategoryPlot.this.foregroundRangeMarkers.clear();\n}\ngeneration= 1\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.XYPlot\nline= 2481\nlineSuspiciousness= 0.5\noriginal statement= return removeRangeMarker(0, marker, layer)\nfixed statement= return false\ngeneration= 50\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.CategoryPlot\nline= 2415\nlineSuspiciousness= 0.5\noriginal statement= return removeRangeMarker(index, marker, layer, true)\nfixed statement= return false\ngeneration= 74\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.CategoryPlot\nline= 2122\nlineSuspiciousness= 0.5\noriginal statement= return removeDomainMarker(0, marker, layer)\nfixed statement= return false\ngeneration= 92\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.XYPlot\nline= 2265\nlineSuspiciousness= 0.5\noriginal statement= return removeDomainMarker(index, marker, layer, true)\nfixed statement= return org.jfree.chart.plot.XYPlot.this.rangeCrosshairVisible",
    "patchLocation": {
        "className": "org.jfree.chart.plot.CategoryPlot",
        "line": 900,
        "lineSuspiciousness": 0.236
    },
    "scope": "LOCAL",
    "time": "111",
    "type": "ReplaceOp",
    "variant": 138
}
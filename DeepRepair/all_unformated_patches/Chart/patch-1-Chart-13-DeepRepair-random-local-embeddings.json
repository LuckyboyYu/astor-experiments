{
    "buggyStatement": "h[4] = h[2]\nfixed statement= org.jfree.chart.util.Size2D size = org.jfree.chart.block.BorderArrangement.this.bottomBlock.arrange(g2, constraint)\ngeneration= 2\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.block.BorderArrangement\nline= 323\nlineSuspiciousness= 1\noriginal statement= return arrange(container, g2, new org.jfree.chart.block.RectangleConstraint(width, height))",
    "diffpatch": "--- /local/scr/mtufano/Chart/13/b/random-local-embeddings/1/AstorMain-b/src/default/org/jfree/chart/block/BorderArrangement.java\t\n+++ /local/scr/mtufano/Chart/13/b/random-local-embeddings/1/AstorMain-b/src/variant-1085/org/jfree/chart/block/BorderArrangement.java\t\n@@ -189,7 +189,7 @@\n \t\t\th[4] = size.height;\n \t\t}\n \t\tdouble height = ((h[0]) + (h[1])) + (java.lang.Math.max(h[2], java.lang.Math.max(h[3], h[4])));\n-\t\treturn arrange(container, g2, new org.jfree.chart.block.RectangleConstraint(width, height));\n+\t\treturn new org.jfree.chart.util.Size2D(width, height);\n \t}\n \n \tprotected org.jfree.chart.util.Size2D arrangeRR(org.jfree.chart.block.BlockContainer container, org.jfree.data.Range widthRange, org.jfree.data.Range heightRange, java.awt.Graphics2D g2) {\n@@ -279,6 +279,7 @@\n \t\t\tw[3] = size.width;\n \t\t}\n \t\th[4] = h[2];\n+\t\torg.jfree.chart.util.Size2D size = org.jfree.chart.block.BorderArrangement.this.bottomBlock.arrange(g2, constraint);\n \t\tw[4] = ((constraint.getWidth()) - (w[3])) - (w[2]);\n \t\torg.jfree.chart.block.RectangleConstraint c5 = new org.jfree.chart.block.RectangleConstraint(w[4], h[4]);\n \t\tif ((org.jfree.chart.block.BorderArrangement.this.centerBlock) != null) {\n\n--- /local/scr/mtufano/Chart/13/b/random-local-embeddings/1/AstorMain-b/src/default/org/jfree/chart/block/BorderArrangement.java\t\n+++ /local/scr/mtufano/Chart/13/b/random-local-embeddings/1/AstorMain-b/src/variant-1085/org/jfree/chart/block/BorderArrangement.java\t\n@@ -189,7 +189,7 @@\n \t\t\th[4] = size.height;\n \t\t}\n \t\tdouble height = ((h[0]) + (h[1])) + (java.lang.Math.max(h[2], java.lang.Math.max(h[3], h[4])));\n-\t\treturn arrange(container, g2, new org.jfree.chart.block.RectangleConstraint(width, height));\n+\t\treturn new org.jfree.chart.util.Size2D(width, height);\n \t}\n \n \tprotected org.jfree.chart.util.Size2D arrangeRR(org.jfree.chart.block.BlockContainer container, org.jfree.data.Range widthRange, org.jfree.data.Range heightRange, java.awt.Graphics2D g2) {\n@@ -279,6 +279,7 @@\n \t\t\tw[3] = size.width;\n \t\t}\n \t\th[4] = h[2];\n+\t\torg.jfree.chart.util.Size2D size = org.jfree.chart.block.BorderArrangement.this.bottomBlock.arrange(g2, constraint);\n \t\tw[4] = ((constraint.getWidth()) - (w[3])) - (w[2]);\n \t\torg.jfree.chart.block.RectangleConstraint c5 = new org.jfree.chart.block.RectangleConstraint(w[4], h[4]);\n \t\tif ((org.jfree.chart.block.BorderArrangement.this.centerBlock) != null) {",
    "generation": 2,
    "ingredients": null,
    "patch": "org.jfree.chart.util.Size2D size = org.jfree.chart.block.BorderArrangement.this.bottomBlock.arrange(g2, constraint)\ngeneration= 2\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.block.BorderArrangement\nline= 323\nlineSuspiciousness= 1\noriginal statement= return arrange(container, g2, new org.jfree.chart.block.RectangleConstraint(width, height))\nfixed statement= return new org.jfree.chart.util.Size2D(width, height)",
    "patchLocation": {
        "className": "org.jfree.chart.block.BorderArrangement",
        "line": 461,
        "lineSuspiciousness": 1.0
    },
    "scope": "LOCAL",
    "time": "265",
    "type": "InsertAfterOp",
    "variant": 1085
}
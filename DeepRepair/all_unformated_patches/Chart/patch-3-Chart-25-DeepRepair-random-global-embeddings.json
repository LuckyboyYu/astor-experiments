{
    "buggyStatement": "boolean b1 = (area.getWidth()) <= (org.jfree.chart.plot.Plot.MINIMUM_WIDTH_TO_DRAW)\nfixed statement= domainGridlinesVisible = false\ngeneration= 11\ningredientScope= GLOBAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.CategoryPlot\nline= 2855\nlineSuspiciousness= 0.894\noriginal statement= if (hasData && (renderer != null)) {\n\tfoundData = true;\n\torg.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, org.jfree.chart.plot.CategoryPlot.this, index, info);\n\tint columnCount = currentDataset.getColumnCount();\n\tint rowCount = currentDataset.getRowCount();\n\tint passCount = renderer.getPassCount();\n\tfor (int pass = 0; pass < passCount; pass++) {\n\t\tif ((org.jfree.chart.plot.CategoryPlot.this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\tfor (int column = 0; column < columnCount; column++) {\n\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}else {\n\t\t\tfor (int column = columnCount - 1; column >= 0; column--) {\n\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
    "diffpatch": "--- /local/scr/mtufano/Chart/25/b/random-global-embeddings/2/AstorMain-b/src/default/org/jfree/chart/plot/CategoryPlot.java\t\n+++ /local/scr/mtufano/Chart/25/b/random-global-embeddings/2/AstorMain-b/src/variant-679/org/jfree/chart/plot/CategoryPlot.java\t\n@@ -1153,6 +1153,7 @@\n \n \tpublic void draw(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D area, java.awt.geom.Point2D anchor, org.jfree.chart.plot.PlotState parentState, org.jfree.chart.plot.PlotRenderingInfo state) {\n \t\tboolean b1 = (area.getWidth()) <= (org.jfree.chart.plot.Plot.MINIMUM_WIDTH_TO_DRAW);\n+\t\tdomainGridlinesVisible = false;\n \t\tboolean b2 = (area.getHeight()) <= (org.jfree.chart.plot.Plot.MINIMUM_HEIGHT_TO_DRAW);\n \t\tif (b1 || b2) {\n \t\t\treturn ;\n@@ -1330,39 +1331,9 @@\n \t\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(index);\n \t\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(index);\n \t\tboolean hasData = !(org.jfree.data.general.DatasetUtilities.isEmptyOrNull(currentDataset));\n-\t\tif (hasData && (renderer != null)) {\n-\t\t\tfoundData = true;\n-\t\t\torg.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, org.jfree.chart.plot.CategoryPlot.this, index, info);\n-\t\t\tint columnCount = currentDataset.getColumnCount();\n-\t\t\tint rowCount = currentDataset.getRowCount();\n-\t\t\tint passCount = renderer.getPassCount();\n-\t\t\tfor (int pass = 0; pass < passCount; pass++) {\n-\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n-\t\t\t\t\tfor (int column = 0; column < columnCount; column++) {\n-\t\t\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n-\t\t\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}else {\n-\t\t\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}else {\n-\t\t\t\t\tfor (int column = columnCount - 1; column >= 0; column--) {\n-\t\t\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n-\t\t\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}else {\n-\t\t\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\t\tif (rangeAxis != null) {\n+\t\t\trangeAxis.setPlot(org.jfree.chart.plot.CategoryPlot.this);\n+\t\t\trangeAxis.addChangeListener(org.jfree.chart.plot.CategoryPlot.this);\n \t\t}\n \t\treturn foundData;\n \t}\n\n--- /local/scr/mtufano/Chart/25/b/random-global-embeddings/2/AstorMain-b/src/default/org/jfree/chart/plot/CategoryPlot.java\t\n+++ /local/scr/mtufano/Chart/25/b/random-global-embeddings/2/AstorMain-b/src/variant-679/org/jfree/chart/plot/CategoryPlot.java\t\n@@ -1153,6 +1153,7 @@\n \n \tpublic void draw(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D area, java.awt.geom.Point2D anchor, org.jfree.chart.plot.PlotState parentState, org.jfree.chart.plot.PlotRenderingInfo state) {\n \t\tboolean b1 = (area.getWidth()) <= (org.jfree.chart.plot.Plot.MINIMUM_WIDTH_TO_DRAW);\n+\t\tdomainGridlinesVisible = false;\n \t\tboolean b2 = (area.getHeight()) <= (org.jfree.chart.plot.Plot.MINIMUM_HEIGHT_TO_DRAW);\n \t\tif (b1 || b2) {\n \t\t\treturn ;\n@@ -1330,39 +1331,9 @@\n \t\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(index);\n \t\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(index);\n \t\tboolean hasData = !(org.jfree.data.general.DatasetUtilities.isEmptyOrNull(currentDataset));\n-\t\tif (hasData && (renderer != null)) {\n-\t\t\tfoundData = true;\n-\t\t\torg.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, org.jfree.chart.plot.CategoryPlot.this, index, info);\n-\t\t\tint columnCount = currentDataset.getColumnCount();\n-\t\t\tint rowCount = currentDataset.getRowCount();\n-\t\t\tint passCount = renderer.getPassCount();\n-\t\t\tfor (int pass = 0; pass < passCount; pass++) {\n-\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n-\t\t\t\t\tfor (int column = 0; column < columnCount; column++) {\n-\t\t\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n-\t\t\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}else {\n-\t\t\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}else {\n-\t\t\t\t\tfor (int column = columnCount - 1; column >= 0; column--) {\n-\t\t\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n-\t\t\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}else {\n-\t\t\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\t\tif (rangeAxis != null) {\n+\t\t\trangeAxis.setPlot(org.jfree.chart.plot.CategoryPlot.this);\n+\t\t\trangeAxis.addChangeListener(org.jfree.chart.plot.CategoryPlot.this);\n \t\t}\n \t\treturn foundData;\n \t}",
    "generation": 11,
    "ingredients": null,
    "patch": "domainGridlinesVisible = false\ngeneration= 11\ningredientScope= GLOBAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.CategoryPlot\nline= 2855\nlineSuspiciousness= 0.894\noriginal statement= if (hasData && (renderer != null)) {\n\tfoundData = true;\n\torg.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, org.jfree.chart.plot.CategoryPlot.this, index, info);\n\tint columnCount = currentDataset.getColumnCount();\n\tint rowCount = currentDataset.getRowCount();\n\tint passCount = renderer.getPassCount();\n\tfor (int pass = 0; pass < passCount; pass++) {\n\t\tif ((org.jfree.chart.plot.CategoryPlot.this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\tfor (int column = 0; column < columnCount; column++) {\n\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}else {\n\t\t\tfor (int column = columnCount - 1; column >= 0; column--) {\n\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nfixed statement= if (rangeAxis != null) {\n\trangeAxis.setPlot(org.jfree.chart.plot.CategoryPlot.this);\n\trangeAxis.addChangeListener(org.jfree.chart.plot.CategoryPlot.this);\n}",
    "patchLocation": {
        "className": "org.jfree.chart.plot.CategoryPlot",
        "line": 2558,
        "lineSuspiciousness": 0.894
    },
    "scope": "GLOBAL",
    "time": "667",
    "type": "InsertAfterOp",
    "variant": 679
}
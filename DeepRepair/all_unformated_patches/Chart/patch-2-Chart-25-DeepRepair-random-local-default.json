{
    "buggyStatement": "notifyListeners(e)\nfixed statement= notifyListeners(new org.jfree.chart.event.PlotChangeEvent(org.jfree.chart.plot.CategoryPlot.this))\ngeneration= 5\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.CategoryPlot\nline= 2855\nlineSuspiciousness= 0.894\noriginal statement= if (hasData && (renderer != null)) {\n\tfoundData = true;\n\torg.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, org.jfree.chart.plot.CategoryPlot.this, index, info);\n\tint columnCount = currentDataset.getColumnCount();\n\tint rowCount = currentDataset.getRowCount();\n\tint passCount = renderer.getPassCount();\n\tfor (int pass = 0; pass < passCount; pass++) {\n\t\tif ((org.jfree.chart.plot.CategoryPlot.this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\tfor (int column = 0; column < columnCount; column++) {\n\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}else {\n\t\t\tfor (int column = columnCount - 1; column >= 0; column--) {\n\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
    "diffpatch": "--- /local/scr/mtufano/Chart/25/b/random-local-default/3/AstorMain-b/src/default/org/jfree/chart/plot/CategoryPlot.java\t\n+++ /local/scr/mtufano/Chart/25/b/random-local-default/3/AstorMain-b/src/variant-360/org/jfree/chart/plot/CategoryPlot.java\t\n@@ -773,7 +773,7 @@\n \t\t}else {\n \t\t\torg.jfree.chart.event.PlotChangeEvent e = new org.jfree.chart.event.PlotChangeEvent(org.jfree.chart.plot.CategoryPlot.this);\n \t\t\te.setType(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED);\n-\t\t\tnotifyListeners(e);\n+\t\t\tnotifyListeners(new org.jfree.chart.event.PlotChangeEvent(org.jfree.chart.plot.CategoryPlot.this));\n \t\t}\n \t}\n \n@@ -1330,39 +1330,14 @@\n \t\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(index);\n \t\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(index);\n \t\tboolean hasData = !(org.jfree.data.general.DatasetUtilities.isEmptyOrNull(currentDataset));\n-\t\tif (hasData && (renderer != null)) {\n-\t\t\tfoundData = true;\n-\t\t\torg.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, org.jfree.chart.plot.CategoryPlot.this, index, info);\n-\t\t\tint columnCount = currentDataset.getColumnCount();\n-\t\t\tint rowCount = currentDataset.getRowCount();\n-\t\t\tint passCount = renderer.getPassCount();\n-\t\t\tfor (int pass = 0; pass < passCount; pass++) {\n-\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n-\t\t\t\t\tfor (int column = 0; column < columnCount; column++) {\n-\t\t\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n-\t\t\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}else {\n-\t\t\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}else {\n-\t\t\t\t\tfor (int column = columnCount - 1; column >= 0; column--) {\n-\t\t\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n-\t\t\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}else {\n-\t\t\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n+\t\tif ((org.jfree.chart.plot.CategoryPlot.this.foregroundDomainMarkers) != null) {\n+\t\t\tjava.util.Set keys = org.jfree.chart.plot.CategoryPlot.this.foregroundDomainMarkers.keySet();\n+\t\t\tjava.util.Iterator iterator = keys.iterator();\n+\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\tjava.lang.Integer key = ((java.lang.Integer) (iterator.next()));\n+\t\t\t\tclearDomainMarkers(key.intValue());\n \t\t\t}\n+\t\t\torg.jfree.chart.plot.CategoryPlot.this.foregroundDomainMarkers.clear();\n \t\t}\n \t\treturn foundData;\n \t}\n\n--- /local/scr/mtufano/Chart/25/b/random-local-default/3/AstorMain-b/src/default/org/jfree/chart/plot/CategoryPlot.java\t\n+++ /local/scr/mtufano/Chart/25/b/random-local-default/3/AstorMain-b/src/variant-360/org/jfree/chart/plot/CategoryPlot.java\t\n@@ -773,7 +773,7 @@\n \t\t}else {\n \t\t\torg.jfree.chart.event.PlotChangeEvent e = new org.jfree.chart.event.PlotChangeEvent(org.jfree.chart.plot.CategoryPlot.this);\n \t\t\te.setType(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED);\n-\t\t\tnotifyListeners(e);\n+\t\t\tnotifyListeners(new org.jfree.chart.event.PlotChangeEvent(org.jfree.chart.plot.CategoryPlot.this));\n \t\t}\n \t}\n \n@@ -1330,39 +1330,14 @@\n \t\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(index);\n \t\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(index);\n \t\tboolean hasData = !(org.jfree.data.general.DatasetUtilities.isEmptyOrNull(currentDataset));\n-\t\tif (hasData && (renderer != null)) {\n-\t\t\tfoundData = true;\n-\t\t\torg.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, org.jfree.chart.plot.CategoryPlot.this, index, info);\n-\t\t\tint columnCount = currentDataset.getColumnCount();\n-\t\t\tint rowCount = currentDataset.getRowCount();\n-\t\t\tint passCount = renderer.getPassCount();\n-\t\t\tfor (int pass = 0; pass < passCount; pass++) {\n-\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n-\t\t\t\t\tfor (int column = 0; column < columnCount; column++) {\n-\t\t\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n-\t\t\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}else {\n-\t\t\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}else {\n-\t\t\t\t\tfor (int column = columnCount - 1; column >= 0; column--) {\n-\t\t\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n-\t\t\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}else {\n-\t\t\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n+\t\tif ((org.jfree.chart.plot.CategoryPlot.this.foregroundDomainMarkers) != null) {\n+\t\t\tjava.util.Set keys = org.jfree.chart.plot.CategoryPlot.this.foregroundDomainMarkers.keySet();\n+\t\t\tjava.util.Iterator iterator = keys.iterator();\n+\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\tjava.lang.Integer key = ((java.lang.Integer) (iterator.next()));\n+\t\t\t\tclearDomainMarkers(key.intValue());\n \t\t\t}\n+\t\t\torg.jfree.chart.plot.CategoryPlot.this.foregroundDomainMarkers.clear();\n \t\t}\n \t\treturn foundData;\n \t}",
    "generation": 5,
    "ingredients": null,
    "patch": "notifyListeners(new org.jfree.chart.event.PlotChangeEvent(org.jfree.chart.plot.CategoryPlot.this))\ngeneration= 5\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.CategoryPlot\nline= 2855\nlineSuspiciousness= 0.894\noriginal statement= if (hasData && (renderer != null)) {\n\tfoundData = true;\n\torg.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, org.jfree.chart.plot.CategoryPlot.this, index, info);\n\tint columnCount = currentDataset.getColumnCount();\n\tint rowCount = currentDataset.getRowCount();\n\tint passCount = renderer.getPassCount();\n\tfor (int pass = 0; pass < passCount; pass++) {\n\t\tif ((org.jfree.chart.plot.CategoryPlot.this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\tfor (int column = 0; column < columnCount; column++) {\n\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}else {\n\t\t\tfor (int column = columnCount - 1; column >= 0; column--) {\n\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nfixed statement= if ((org.jfree.chart.plot.CategoryPlot.this.foregroundDomainMarkers) != null) {\n\tjava.util.Set keys = org.jfree.chart.plot.CategoryPlot.this.foregroundDomainMarkers.keySet();\n\tjava.util.Iterator iterator = keys.iterator();\n\twhile (iterator.hasNext()) {\n\t\tjava.lang.Integer key = ((java.lang.Integer) (iterator.next()));\n\t\tclearDomainMarkers(key.intValue());\n\t} \n\torg.jfree.chart.plot.CategoryPlot.this.foregroundDomainMarkers.clear();\n}",
    "patchLocation": {
        "className": "org.jfree.chart.plot.CategoryPlot",
        "line": 1849,
        "lineSuspiciousness": 0.894
    },
    "scope": "LOCAL",
    "time": "263",
    "type": "ReplaceOp",
    "variant": 360
}
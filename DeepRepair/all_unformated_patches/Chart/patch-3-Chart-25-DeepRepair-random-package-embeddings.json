{
    "buggyStatement": "org.jfree.chart.axis.Tick tick = new org.jfree.chart.axis.CategoryTick(category, label, position.getLabelAnchor(), position.getRotationAnchor(), position.getAngle())\nfixed statement= float labely = ((float) ((dataArea.getY()) + ((dataArea.getHeight()) / 2.0)))\ngeneration= 6\ningredientScope= PACKAGE\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.CategoryPlot\nline= 2855\nlineSuspiciousness= 0.894\noriginal statement= if (hasData && (renderer != null)) {\n\tfoundData = true;\n\torg.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, org.jfree.chart.plot.CategoryPlot.this, index, info);\n\tint columnCount = currentDataset.getColumnCount();\n\tint rowCount = currentDataset.getRowCount();\n\tint passCount = renderer.getPassCount();\n\tfor (int pass = 0; pass < passCount; pass++) {\n\t\tif ((org.jfree.chart.plot.CategoryPlot.this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\tfor (int column = 0; column < columnCount; column++) {\n\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}else {\n\t\t\tfor (int column = columnCount - 1; column >= 0; column--) {\n\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
    "diffpatch": "--- /local/scr/mtufano/Chart/25/b/random-package-embeddings/2/AstorMain-b/src/default/org/jfree/chart/axis/CategoryAxis.java\t\n+++ /local/scr/mtufano/Chart/25/b/random-package-embeddings/2/AstorMain-b/src/variant-40/org/jfree/chart/axis/CategoryAxis.java\t\n@@ -442,6 +442,7 @@\n \t\t\t\t\t}\n \t\t\t\t\n \t\t\t\torg.jfree.chart.axis.Tick tick = new org.jfree.chart.axis.CategoryTick(category, label, position.getLabelAnchor(), position.getRotationAnchor(), position.getAngle());\n+\t\t\t\tfloat labely = ((float) ((dataArea.getY()) + ((dataArea.getHeight()) / 2.0)));\n \t\t\t\tticks.add(tick);\n \t\t\t\tcategoryIndex = categoryIndex + 1;\n \t\t\t} \n\n--- /local/scr/mtufano/Chart/25/b/random-package-embeddings/2/AstorMain-b/src/default/org/jfree/chart/plot/CategoryPlot.java\t\n+++ /local/scr/mtufano/Chart/25/b/random-package-embeddings/2/AstorMain-b/src/variant-40/org/jfree/chart/plot/CategoryPlot.java\t\n@@ -1330,39 +1330,9 @@\n \t\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(index);\n \t\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(index);\n \t\tboolean hasData = !(org.jfree.data.general.DatasetUtilities.isEmptyOrNull(currentDataset));\n-\t\tif (hasData && (renderer != null)) {\n-\t\t\tfoundData = true;\n-\t\t\torg.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, org.jfree.chart.plot.CategoryPlot.this, index, info);\n-\t\t\tint columnCount = currentDataset.getColumnCount();\n-\t\t\tint rowCount = currentDataset.getRowCount();\n-\t\t\tint passCount = renderer.getPassCount();\n-\t\t\tfor (int pass = 0; pass < passCount; pass++) {\n-\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n-\t\t\t\t\tfor (int column = 0; column < columnCount; column++) {\n-\t\t\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n-\t\t\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}else {\n-\t\t\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}else {\n-\t\t\t\t\tfor (int column = columnCount - 1; column >= 0; column--) {\n-\t\t\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n-\t\t\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}else {\n-\t\t\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n-\t\t\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\t\tif (renderer != null) {\n+\t\t\trenderer.setPlot(org.jfree.chart.plot.CategoryPlot.this);\n+\t\t\trenderer.addChangeListener(org.jfree.chart.plot.CategoryPlot.this);\n \t\t}\n \t\treturn foundData;\n \t}",
    "generation": 6,
    "ingredients": null,
    "patch": "float labely = ((float) ((dataArea.getY()) + ((dataArea.getHeight()) / 2.0)))\ngeneration= 6\ningredientScope= PACKAGE\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.CategoryPlot\nline= 2855\nlineSuspiciousness= 0.894\noriginal statement= if (hasData && (renderer != null)) {\n\tfoundData = true;\n\torg.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, org.jfree.chart.plot.CategoryPlot.this, index, info);\n\tint columnCount = currentDataset.getColumnCount();\n\tint rowCount = currentDataset.getRowCount();\n\tint passCount = renderer.getPassCount();\n\tfor (int pass = 0; pass < passCount; pass++) {\n\t\tif ((org.jfree.chart.plot.CategoryPlot.this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\tfor (int column = 0; column < columnCount; column++) {\n\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}else {\n\t\t\tfor (int column = columnCount - 1; column >= 0; column--) {\n\t\t\t\tif ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {\n\t\t\t\t\tfor (int row = 0; row < rowCount; row++) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tfor (int row = rowCount - 1; row >= 0; row--) {\n\t\t\t\t\t\trenderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nfixed statement= if (renderer != null) {\n\trenderer.setPlot(org.jfree.chart.plot.CategoryPlot.this);\n\trenderer.addChangeListener(org.jfree.chart.plot.CategoryPlot.this);\n}",
    "patchLocation": {
        "className": "org.jfree.chart.axis.CategoryAxis",
        "line": 1019,
        "lineSuspiciousness": 0.894
    },
    "scope": "PACKAGE",
    "time": "45",
    "type": "InsertAfterOp",
    "variant": 40
}
{
    "buggyStatement": "if (layer == (org.jfree.chart.util.Layer.FOREGROUND)) {\n\tmarkers = ((java.util.ArrayList) (org.jfree.chart.plot.XYPlot.this.foregroundDomainMarkers.get(new java.lang.Integer(index))));\n}else {\n\tmarkers = ((java.util.ArrayList) (org.jfree.chart.plot.XYPlot.this.backgroundDomainMarkers.get(new java.lang.Integer(index))));\n}\nfixed statement= boolean foundData = false\ngeneration= 4\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.CategoryPlot\nline= 2122\nlineSuspiciousness= 0.5\noriginal statement= return removeDomainMarker(0, marker, layer)\nfixed statement= return false\ngeneration= 5\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.CategoryPlot\nline= 2415\nlineSuspiciousness= 0.5\noriginal statement= return removeRangeMarker(index, marker, layer, true)\nfixed statement= return false\ngeneration= 15\ningredientScope= LOCAL\noperation: InsertBeforeOp\nlocation= org.jfree.chart.plot.XYPlot\nline= 2293\nlineSuspiciousness= 0.5\noriginal statement= boolean removed = markers.remove(marker)\nfixed statement= markers = new java.util.ArrayList()\ngeneration= 103\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.XYPlot\nline= 2498\nlineSuspiciousness= 0.5\noriginal statement= return removeRangeMarker(index, marker, layer, true)",
    "diffpatch": "--- /local/scr/mtufano/Chart/14/b/random-local-embeddings/2/AstorMain-b/src/default/org/jfree/chart/plot/XYPlot.java\t\n+++ /local/scr/mtufano/Chart/14/b/random-local-embeddings/2/AstorMain-b/src/variant-105/org/jfree/chart/plot/XYPlot.java\t\n@@ -916,6 +916,8 @@\n \t\t}else {\n \t\t\tmarkers = ((java.util.ArrayList) (org.jfree.chart.plot.XYPlot.this.backgroundDomainMarkers.get(new java.lang.Integer(index))));\n \t\t}\n+\t\tboolean foundData = false;\n+\t\tmarkers = new java.util.ArrayList();\n \t\tboolean removed = markers.remove(marker);\n \t\tif (removed && notify) {\n \t\t\tfireChangeEvent();\n@@ -1018,7 +1020,7 @@\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeRangeMarker(index, marker, layer, true);\n+\t\treturn false;\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer, boolean notify) {\n\n--- /local/scr/mtufano/Chart/14/b/random-local-embeddings/2/AstorMain-b/src/default/org/jfree/chart/plot/XYPlot.java\t\n+++ /local/scr/mtufano/Chart/14/b/random-local-embeddings/2/AstorMain-b/src/variant-105/org/jfree/chart/plot/XYPlot.java\t\n@@ -916,6 +916,8 @@\n \t\t}else {\n \t\t\tmarkers = ((java.util.ArrayList) (org.jfree.chart.plot.XYPlot.this.backgroundDomainMarkers.get(new java.lang.Integer(index))));\n \t\t}\n+\t\tboolean foundData = false;\n+\t\tmarkers = new java.util.ArrayList();\n \t\tboolean removed = markers.remove(marker);\n \t\tif (removed && notify) {\n \t\t\tfireChangeEvent();\n@@ -1018,7 +1020,7 @@\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeRangeMarker(index, marker, layer, true);\n+\t\treturn false;\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer, boolean notify) {\n\n--- /local/scr/mtufano/Chart/14/b/random-local-embeddings/2/AstorMain-b/src/default/org/jfree/chart/plot/CategoryPlot.java\t\n+++ /local/scr/mtufano/Chart/14/b/random-local-embeddings/2/AstorMain-b/src/variant-105/org/jfree/chart/plot/CategoryPlot.java\t\n@@ -916,7 +916,7 @@\n \t}\n \n \tpublic boolean removeDomainMarker(org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeDomainMarker(0, marker, layer);\n+\t\treturn false;\n \t}\n \n \tpublic boolean removeDomainMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n@@ -1052,7 +1052,7 @@\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeRangeMarker(index, marker, layer, true);\n+\t\treturn false;\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer, boolean notify) {\n\n--- /local/scr/mtufano/Chart/14/b/random-local-embeddings/2/AstorMain-b/src/default/org/jfree/chart/plot/CategoryPlot.java\t\n+++ /local/scr/mtufano/Chart/14/b/random-local-embeddings/2/AstorMain-b/src/variant-105/org/jfree/chart/plot/CategoryPlot.java\t\n@@ -916,7 +916,7 @@\n \t}\n \n \tpublic boolean removeDomainMarker(org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeDomainMarker(0, marker, layer);\n+\t\treturn false;\n \t}\n \n \tpublic boolean removeDomainMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n@@ -1052,7 +1052,7 @@\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeRangeMarker(index, marker, layer, true);\n+\t\treturn false;\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer, boolean notify) {\n\n--- /local/scr/mtufano/Chart/14/b/random-local-embeddings/2/AstorMain-b/src/default/org/jfree/chart/plot/XYPlot.java\t\n+++ /local/scr/mtufano/Chart/14/b/random-local-embeddings/2/AstorMain-b/src/variant-105/org/jfree/chart/plot/XYPlot.java\t\n@@ -916,6 +916,8 @@\n \t\t}else {\n \t\t\tmarkers = ((java.util.ArrayList) (org.jfree.chart.plot.XYPlot.this.backgroundDomainMarkers.get(new java.lang.Integer(index))));\n \t\t}\n+\t\tboolean foundData = false;\n+\t\tmarkers = new java.util.ArrayList();\n \t\tboolean removed = markers.remove(marker);\n \t\tif (removed && notify) {\n \t\t\tfireChangeEvent();\n@@ -1018,7 +1020,7 @@\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer) {\n-\t\treturn removeRangeMarker(index, marker, layer, true);\n+\t\treturn false;\n \t}\n \n \tpublic boolean removeRangeMarker(int index, org.jfree.chart.plot.Marker marker, org.jfree.chart.util.Layer layer, boolean notify) {",
    "generation": 4,
    "ingredients": null,
    "patch": "boolean foundData = false\ngeneration= 4\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.CategoryPlot\nline= 2122\nlineSuspiciousness= 0.5\noriginal statement= return removeDomainMarker(0, marker, layer)\nfixed statement= return false\ngeneration= 5\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.CategoryPlot\nline= 2415\nlineSuspiciousness= 0.5\noriginal statement= return removeRangeMarker(index, marker, layer, true)\nfixed statement= return false\ngeneration= 15\ningredientScope= LOCAL\noperation: InsertBeforeOp\nlocation= org.jfree.chart.plot.XYPlot\nline= 2293\nlineSuspiciousness= 0.5\noriginal statement= boolean removed = markers.remove(marker)\nfixed statement= markers = new java.util.ArrayList()\ngeneration= 103\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.plot.XYPlot\nline= 2498\nlineSuspiciousness= 0.5\noriginal statement= return removeRangeMarker(index, marker, layer, true)\nfixed statement= return false",
    "patchLocation": {
        "className": "org.jfree.chart.plot.XYPlot",
        "line": 2285,
        "lineSuspiciousness": 0.5
    },
    "scope": "LOCAL",
    "time": "109",
    "type": "InsertAfterOp",
    "variant": 105
}
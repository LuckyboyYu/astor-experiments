{
    "buggyStatement": "float descent = metrics.getDescent()\nfixed statement= boolean isJava14 = org.jfree.chart.util.ObjectUtilities.isJDK14()\ngeneration= 2\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.block.AbstractBlock\nline= 388\nlineSuspiciousness= 0.692\noriginal statement= return java.lang.Math.max(result, 0.0)\nfixed statement= return org.jfree.chart.block.AbstractBlock.this.width\ngeneration= 277\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.axis.Axis\nline= 1113\nlineSuspiciousness= 0.699\noriginal statement= if (edge == (org.jfree.chart.util.RectangleEdge.TOP)) {\n\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());\n\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n\tlabelBounds = rotatedLabelBounds.getBounds2D();\n\tfloat w = ((float) (labelBounds.getWidth()));\n\tfloat h = ((float) (labelBounds.getHeight()));\n\tfloat labelx = ((float) (dataArea.getCenterX()));\n\tfloat labely = ((float) (((state.getCursor()) - (insets.getBottom())) - (h / 2.0)));\n\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);\n\thotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)), (labely - (h / 2.0F)), w, h);\n\tstate.cursorUp((((insets.getTop()) + (labelBounds.getHeight())) + (insets.getBottom())));\n}else\n\tif (edge == (org.jfree.chart.util.RectangleEdge.BOTTOM)) {\n\t\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());\n\t\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n\t\tlabelBounds = rotatedLabelBounds.getBounds2D();\n\t\tfloat w = ((float) (labelBounds.getWidth()));\n\t\tfloat h = ((float) (labelBounds.getHeight()));\n\t\tfloat labelx = ((float) (dataArea.getCenterX()));\n\t\tfloat labely = ((float) (((state.getCursor()) + (insets.getTop())) + (h / 2.0)));\n\t\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);\n\t\thotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)), (labely - (h / 2.0F)), w, h);\n\t\tstate.cursorDown((((insets.getTop()) + (labelBounds.getHeight())) + (insets.getBottom())));\n\t}else\n\t\tif (edge == (org.jfree.chart.util.RectangleEdge.LEFT)) {\n\t\t\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(((getLabelAngle()) - ((java.lang.Math.PI) / 2.0)), labelBounds.getCenterX(), labelBounds.getCenterY());\n\t\t\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n\t\t\tlabelBounds = rotatedLabelBounds.getBounds2D();\n\t\t\tfloat w = ((float) (labelBounds.getWidth()));\n\t\t\tfloat h = ((float) (labelBounds.getHeight()));\n\t\t\tfloat labelx = ((float) (((state.getCursor()) - (insets.getRight())) - (w / 2.0)));\n\t\t\tfloat labely = ((float) (dataArea.getCenterY()));\n\t\t\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, ((getLabelAngle()) - ((java.lang.Math.PI) / 2.0)), org.jfree.chart.text.TextAnchor.CENTER);\n\t\t\thotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)), (labely - (h / 2.0F)), w, h);\n\t\t\tstate.cursorLeft((((insets.getLeft()) + (labelBounds.getWidth())) + (insets.getRight())));\n\t\t}else\n\t\t\tif (edge == (org.jfree.chart.util.RectangleEdge.RIGHT)) {\n\t\t\t\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(((getLabelAngle()) + ((java.lang.Math.PI) / 2.0)), labelBounds.getCenterX(), labelBounds.getCenterY());\n\t\t\t\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n\t\t\t\tlabelBounds = rotatedLabelBounds.getBounds2D();\n\t\t\t\tfloat w = ((float) (labelBounds.getWidth()));\n\t\t\t\tfloat h = ((float) (labelBounds.getHeight()));\n\t\t\t\tfloat labelx = ((float) (((state.getCursor()) + (insets.getLeft())) + (w / 2.0)));\n\t\t\t\tfloat labely = ((float) ((dataArea.getY()) + ((dataArea.getHeight()) / 2.0)));\n\t\t\t\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, ((getLabelAngle()) + ((java.lang.Math.PI) / 2.0)), org.jfree.chart.text.TextAnchor.CENTER);\n\t\t\t\thotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)), (labely - (h / 2.0F)), w, h);\n\t\t\t\tstate.cursorRight((((insets.getLeft()) + (labelBounds.getWidth())) + (insets.getRight())));\n\t\t\t}\n\t\t\n\t\n",
    "diffpatch": "--- /local/scr/mtufano/Chart/26/b/similar-local-types-default/1/AstorMain-b/src/default/org/jfree/chart/block/AbstractBlock.java\t\n+++ /local/scr/mtufano/Chart/26/b/similar-local-types-default/1/AstorMain-b/src/variant-1027/org/jfree/chart/block/AbstractBlock.java\t\n@@ -127,7 +127,7 @@\n \t\tdouble result = org.jfree.chart.block.AbstractBlock.this.margin.trimWidth(fixedWidth);\n \t\tresult = org.jfree.chart.block.AbstractBlock.this.frame.getInsets().trimWidth(result);\n \t\tresult = org.jfree.chart.block.AbstractBlock.this.padding.trimWidth(result);\n-\t\treturn java.lang.Math.max(result, 0.0);\n+\t\treturn org.jfree.chart.block.AbstractBlock.this.width;\n \t}\n \n \tprotected double trimToContentHeight(double fixedHeight) {\n\n--- /local/scr/mtufano/Chart/26/b/similar-local-types-default/1/AstorMain-b/src/default/org/jfree/chart/text/TextUtilities.java\t\n+++ /local/scr/mtufano/Chart/26/b/similar-local-types-default/1/AstorMain-b/src/variant-1027/org/jfree/chart/text/TextUtilities.java\t\n@@ -297,6 +297,7 @@\n \t\tjava.awt.geom.Rectangle2D bounds = org.jfree.chart.text.TextUtilities.getTextBounds(text, g2, fm);\n \t\tfloat ascent = metrics.getAscent();\n \t\tfloat halfAscent = ascent / 2.0F;\n+\t\tboolean isJava14 = org.jfree.chart.util.ObjectUtilities.isJDK14();\n \t\tfloat descent = metrics.getDescent();\n \t\tfloat leading = metrics.getLeading();\n \t\tfloat xAdj = 0.0F;\n\n--- /local/scr/mtufano/Chart/26/b/similar-local-types-default/1/AstorMain-b/src/default/org/jfree/chart/axis/Axis.java\t\n+++ /local/scr/mtufano/Chart/26/b/similar-local-types-default/1/AstorMain-b/src/variant-1027/org/jfree/chart/axis/Axis.java\t\n@@ -425,57 +425,10 @@\n \t\tjava.awt.FontMetrics fm = g2.getFontMetrics();\n \t\tjava.awt.geom.Rectangle2D labelBounds = org.jfree.chart.text.TextUtilities.getTextBounds(label, g2, fm);\n \t\tjava.awt.Shape hotspot = null;\n-\t\tif (edge == (org.jfree.chart.util.RectangleEdge.TOP)) {\n-\t\t\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());\n-\t\t\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n-\t\t\tlabelBounds = rotatedLabelBounds.getBounds2D();\n-\t\t\tfloat w = ((float) (labelBounds.getWidth()));\n-\t\t\tfloat h = ((float) (labelBounds.getHeight()));\n-\t\t\tfloat labelx = ((float) (dataArea.getCenterX()));\n-\t\t\tfloat labely = ((float) (((state.getCursor()) - (insets.getBottom())) - (h / 2.0)));\n-\t\t\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);\n-\t\t\thotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)), (labely - (h / 2.0F)), w, h);\n-\t\t\tstate.cursorUp((((insets.getTop()) + (labelBounds.getHeight())) + (insets.getBottom())));\n-\t\t}else\n-\t\t\tif (edge == (org.jfree.chart.util.RectangleEdge.BOTTOM)) {\n-\t\t\t\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());\n-\t\t\t\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n-\t\t\t\tlabelBounds = rotatedLabelBounds.getBounds2D();\n-\t\t\t\tfloat w = ((float) (labelBounds.getWidth()));\n-\t\t\t\tfloat h = ((float) (labelBounds.getHeight()));\n-\t\t\t\tfloat labelx = ((float) (dataArea.getCenterX()));\n-\t\t\t\tfloat labely = ((float) (((state.getCursor()) + (insets.getTop())) + (h / 2.0)));\n-\t\t\t\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);\n-\t\t\t\thotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)), (labely - (h / 2.0F)), w, h);\n-\t\t\t\tstate.cursorDown((((insets.getTop()) + (labelBounds.getHeight())) + (insets.getBottom())));\n-\t\t\t}else\n-\t\t\t\tif (edge == (org.jfree.chart.util.RectangleEdge.LEFT)) {\n-\t\t\t\t\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(((getLabelAngle()) - ((java.lang.Math.PI) / 2.0)), labelBounds.getCenterX(), labelBounds.getCenterY());\n-\t\t\t\t\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n-\t\t\t\t\tlabelBounds = rotatedLabelBounds.getBounds2D();\n-\t\t\t\t\tfloat w = ((float) (labelBounds.getWidth()));\n-\t\t\t\t\tfloat h = ((float) (labelBounds.getHeight()));\n-\t\t\t\t\tfloat labelx = ((float) (((state.getCursor()) - (insets.getRight())) - (w / 2.0)));\n-\t\t\t\t\tfloat labely = ((float) (dataArea.getCenterY()));\n-\t\t\t\t\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, ((getLabelAngle()) - ((java.lang.Math.PI) / 2.0)), org.jfree.chart.text.TextAnchor.CENTER);\n-\t\t\t\t\thotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)), (labely - (h / 2.0F)), w, h);\n-\t\t\t\t\tstate.cursorLeft((((insets.getLeft()) + (labelBounds.getWidth())) + (insets.getRight())));\n-\t\t\t\t}else\n-\t\t\t\t\tif (edge == (org.jfree.chart.util.RectangleEdge.RIGHT)) {\n-\t\t\t\t\t\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(((getLabelAngle()) + ((java.lang.Math.PI) / 2.0)), labelBounds.getCenterX(), labelBounds.getCenterY());\n-\t\t\t\t\t\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n-\t\t\t\t\t\tlabelBounds = rotatedLabelBounds.getBounds2D();\n-\t\t\t\t\t\tfloat w = ((float) (labelBounds.getWidth()));\n-\t\t\t\t\t\tfloat h = ((float) (labelBounds.getHeight()));\n-\t\t\t\t\t\tfloat labelx = ((float) (((state.getCursor()) + (insets.getLeft())) + (w / 2.0)));\n-\t\t\t\t\t\tfloat labely = ((float) ((dataArea.getY()) + ((dataArea.getHeight()) / 2.0)));\n-\t\t\t\t\t\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, ((getLabelAngle()) + ((java.lang.Math.PI) / 2.0)), org.jfree.chart.text.TextAnchor.CENTER);\n-\t\t\t\t\t\thotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)), (labely - (h / 2.0F)), w, h);\n-\t\t\t\t\t\tstate.cursorRight((((insets.getLeft()) + (labelBounds.getWidth())) + (insets.getRight())));\n+\t\tif (label != null) {\n+\t\t\torg.jfree.chart.axis.Axis.this.label = label;\n+\t\t\tnotifyListeners(new org.jfree.chart.event.AxisChangeEvent(org.jfree.chart.axis.Axis.this));\n \t\t\t\t\t}\n-\t\t\t\t\n-\t\t\t\n-\t\t\n \t\tif ((plotState != null) && (hotspot != null)) {\n \t\t\torg.jfree.chart.ChartRenderingInfo owner = plotState.getOwner();\n \t\t\torg.jfree.chart.entity.EntityCollection entities = owner.getEntityCollection();",
    "generation": 2,
    "ingredients": null,
    "patch": "boolean isJava14 = org.jfree.chart.util.ObjectUtilities.isJDK14()\ngeneration= 2\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.block.AbstractBlock\nline= 388\nlineSuspiciousness= 0.692\noriginal statement= return java.lang.Math.max(result, 0.0)\nfixed statement= return org.jfree.chart.block.AbstractBlock.this.width\ngeneration= 277\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.chart.axis.Axis\nline= 1113\nlineSuspiciousness= 0.699\noriginal statement= if (edge == (org.jfree.chart.util.RectangleEdge.TOP)) {\n\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());\n\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n\tlabelBounds = rotatedLabelBounds.getBounds2D();\n\tfloat w = ((float) (labelBounds.getWidth()));\n\tfloat h = ((float) (labelBounds.getHeight()));\n\tfloat labelx = ((float) (dataArea.getCenterX()));\n\tfloat labely = ((float) (((state.getCursor()) - (insets.getBottom())) - (h / 2.0)));\n\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);\n\thotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)), (labely - (h / 2.0F)), w, h);\n\tstate.cursorUp((((insets.getTop()) + (labelBounds.getHeight())) + (insets.getBottom())));\n}else\n\tif (edge == (org.jfree.chart.util.RectangleEdge.BOTTOM)) {\n\t\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());\n\t\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n\t\tlabelBounds = rotatedLabelBounds.getBounds2D();\n\t\tfloat w = ((float) (labelBounds.getWidth()));\n\t\tfloat h = ((float) (labelBounds.getHeight()));\n\t\tfloat labelx = ((float) (dataArea.getCenterX()));\n\t\tfloat labely = ((float) (((state.getCursor()) + (insets.getTop())) + (h / 2.0)));\n\t\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);\n\t\thotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)), (labely - (h / 2.0F)), w, h);\n\t\tstate.cursorDown((((insets.getTop()) + (labelBounds.getHeight())) + (insets.getBottom())));\n\t}else\n\t\tif (edge == (org.jfree.chart.util.RectangleEdge.LEFT)) {\n\t\t\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(((getLabelAngle()) - ((java.lang.Math.PI) / 2.0)), labelBounds.getCenterX(), labelBounds.getCenterY());\n\t\t\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n\t\t\tlabelBounds = rotatedLabelBounds.getBounds2D();\n\t\t\tfloat w = ((float) (labelBounds.getWidth()));\n\t\t\tfloat h = ((float) (labelBounds.getHeight()));\n\t\t\tfloat labelx = ((float) (((state.getCursor()) - (insets.getRight())) - (w / 2.0)));\n\t\t\tfloat labely = ((float) (dataArea.getCenterY()));\n\t\t\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, ((getLabelAngle()) - ((java.lang.Math.PI) / 2.0)), org.jfree.chart.text.TextAnchor.CENTER);\n\t\t\thotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)), (labely - (h / 2.0F)), w, h);\n\t\t\tstate.cursorLeft((((insets.getLeft()) + (labelBounds.getWidth())) + (insets.getRight())));\n\t\t}else\n\t\t\tif (edge == (org.jfree.chart.util.RectangleEdge.RIGHT)) {\n\t\t\t\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(((getLabelAngle()) + ((java.lang.Math.PI) / 2.0)), labelBounds.getCenterX(), labelBounds.getCenterY());\n\t\t\t\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n\t\t\t\tlabelBounds = rotatedLabelBounds.getBounds2D();\n\t\t\t\tfloat w = ((float) (labelBounds.getWidth()));\n\t\t\t\tfloat h = ((float) (labelBounds.getHeight()));\n\t\t\t\tfloat labelx = ((float) (((state.getCursor()) + (insets.getLeft())) + (w / 2.0)));\n\t\t\t\tfloat labely = ((float) ((dataArea.getY()) + ((dataArea.getHeight()) / 2.0)));\n\t\t\t\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, ((getLabelAngle()) + ((java.lang.Math.PI) / 2.0)), org.jfree.chart.text.TextAnchor.CENTER);\n\t\t\t\thotspot = new java.awt.geom.Rectangle2D.Float((labelx - (w / 2.0F)), (labely - (h / 2.0F)), w, h);\n\t\t\t\tstate.cursorRight((((insets.getLeft()) + (labelBounds.getWidth())) + (insets.getRight())));\n\t\t\t}\n\t\t\n\t\n\nfixed statement= if (label != null) {\n\torg.jfree.chart.axis.Axis.this.label = label;\n\tnotifyListeners(new org.jfree.chart.event.AxisChangeEvent(org.jfree.chart.axis.Axis.this));\n}",
    "patchLocation": {
        "className": "org.jfree.chart.text.TextUtilities",
        "line": 698,
        "lineSuspiciousness": 0.699
    },
    "scope": "LOCAL",
    "time": "1142",
    "type": "InsertBeforeOp",
    "variant": 1027
}
{
    "buggyStatement": "fireDatasetChanged()\nfixed statement= org.jfree.data.category.DefaultCategoryDataset.this.data.removeRow(columnKey)\ngeneration= 1\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.data.DefaultKeyedValues\nline= 334\nlineSuspiciousness= 1\noriginal statement= if (index < 0) {\n\treturn ;\n}\nfixed statement= if (index < 0) {\n\tthrow new org.jfree.data.UnknownKeyException((\"Key not found: \" + key));\n}\ngeneration= 4\ningredientScope= LOCAL\noperation: InsertBeforeOp\nlocation= org.jfree.data.DefaultKeyedValues\nline= 318\nlineSuspiciousness= 1\noriginal statement= if (index < (org.jfree.data.DefaultKeyedValues.this.keys.size())) {\n\trebuildIndex();\n}\nfixed statement= clear()\ngeneration= 24\ningredientScope= LOCAL\noperation: InsertBeforeOp\nlocation= org.jfree.data.DefaultKeyedValues\nline= 333\nlineSuspiciousness= 1\noriginal statement= int index = getIndex(key)\nfixed statement= org.jfree.data.DefaultKeyedValues.this.indexMap.put(key, new java.lang.Integer(((org.jfree.data.DefaultKeyedValues.this.keys.size()) - 1)))\ngeneration= 976\ningredientScope= LOCAL\noperation: InsertAfterOp\nlocation= org.jfree.data.DefaultKeyedValues2D\nline= 460\nlineSuspiciousness= 0.707\noriginal statement= org.jfree.data.DefaultKeyedValues2D.this.columnKeys.remove(columnKey)",
    "diffpatch": "--- /local/scr/mtufano/Chart/18/b/random-local-embeddings/1/AstorMain-b/src/default/org/jfree/data/DefaultKeyedValues.java\t\n+++ /local/scr/mtufano/Chart/18/b/random-local-embeddings/1/AstorMain-b/src/variant-1030/org/jfree/data/DefaultKeyedValues.java\t\n@@ -117,15 +117,17 @@\n \tpublic void removeValue(int index) {\n \t\torg.jfree.data.DefaultKeyedValues.this.keys.remove(index);\n \t\torg.jfree.data.DefaultKeyedValues.this.values.remove(index);\n+\t\tclear();\n \t\tif (index < (org.jfree.data.DefaultKeyedValues.this.keys.size())) {\n \t\t\trebuildIndex();\n \t\t}\n \t}\n \n \tpublic void removeValue(java.lang.Comparable key) {\n+\t\torg.jfree.data.DefaultKeyedValues.this.indexMap.put(key, new java.lang.Integer(((org.jfree.data.DefaultKeyedValues.this.keys.size()) - 1)));\n \t\tint index = getIndex(key);\n \t\tif (index < 0) {\n-\t\t\treturn ;\n+\t\t\tthrow new org.jfree.data.UnknownKeyException((\"Key not found: \" + key));\n \t\t}\n \t\tremoveValue(index);\n \t}\n\n--- /local/scr/mtufano/Chart/18/b/random-local-embeddings/1/AstorMain-b/src/default/org/jfree/data/DefaultKeyedValues.java\t\n+++ /local/scr/mtufano/Chart/18/b/random-local-embeddings/1/AstorMain-b/src/variant-1030/org/jfree/data/DefaultKeyedValues.java\t\n@@ -117,15 +117,17 @@\n \tpublic void removeValue(int index) {\n \t\torg.jfree.data.DefaultKeyedValues.this.keys.remove(index);\n \t\torg.jfree.data.DefaultKeyedValues.this.values.remove(index);\n+\t\tclear();\n \t\tif (index < (org.jfree.data.DefaultKeyedValues.this.keys.size())) {\n \t\t\trebuildIndex();\n \t\t}\n \t}\n \n \tpublic void removeValue(java.lang.Comparable key) {\n+\t\torg.jfree.data.DefaultKeyedValues.this.indexMap.put(key, new java.lang.Integer(((org.jfree.data.DefaultKeyedValues.this.keys.size()) - 1)));\n \t\tint index = getIndex(key);\n \t\tif (index < 0) {\n-\t\t\treturn ;\n+\t\t\tthrow new org.jfree.data.UnknownKeyException((\"Key not found: \" + key));\n \t\t}\n \t\tremoveValue(index);\n \t}\n\n--- /local/scr/mtufano/Chart/18/b/random-local-embeddings/1/AstorMain-b/src/default/org/jfree/data/category/DefaultCategoryDataset.java\t\n+++ /local/scr/mtufano/Chart/18/b/random-local-embeddings/1/AstorMain-b/src/variant-1030/org/jfree/data/category/DefaultCategoryDataset.java\t\n@@ -101,7 +101,7 @@\n \n \tpublic void removeColumn(java.lang.Comparable columnKey) {\n \t\torg.jfree.data.category.DefaultCategoryDataset.this.data.removeColumn(columnKey);\n-\t\tfireDatasetChanged();\n+\t\torg.jfree.data.category.DefaultCategoryDataset.this.data.removeRow(columnKey);\n \t}\n \n \tpublic void clear() {\n\n--- /local/scr/mtufano/Chart/18/b/random-local-embeddings/1/AstorMain-b/src/default/org/jfree/data/DefaultKeyedValues.java\t\n+++ /local/scr/mtufano/Chart/18/b/random-local-embeddings/1/AstorMain-b/src/variant-1030/org/jfree/data/DefaultKeyedValues.java\t\n@@ -117,15 +117,17 @@\n \tpublic void removeValue(int index) {\n \t\torg.jfree.data.DefaultKeyedValues.this.keys.remove(index);\n \t\torg.jfree.data.DefaultKeyedValues.this.values.remove(index);\n+\t\tclear();\n \t\tif (index < (org.jfree.data.DefaultKeyedValues.this.keys.size())) {\n \t\t\trebuildIndex();\n \t\t}\n \t}\n \n \tpublic void removeValue(java.lang.Comparable key) {\n+\t\torg.jfree.data.DefaultKeyedValues.this.indexMap.put(key, new java.lang.Integer(((org.jfree.data.DefaultKeyedValues.this.keys.size()) - 1)));\n \t\tint index = getIndex(key);\n \t\tif (index < 0) {\n-\t\t\treturn ;\n+\t\t\tthrow new org.jfree.data.UnknownKeyException((\"Key not found: \" + key));\n \t\t}\n \t\tremoveValue(index);\n \t}\n\n--- /local/scr/mtufano/Chart/18/b/random-local-embeddings/1/AstorMain-b/src/default/org/jfree/data/DefaultKeyedValues2D.java\t\n+++ /local/scr/mtufano/Chart/18/b/random-local-embeddings/1/AstorMain-b/src/variant-1030/org/jfree/data/DefaultKeyedValues2D.java\t\n@@ -184,6 +184,7 @@\n \t\t\trowData.removeValue(columnKey);\n \t\t} \n \t\torg.jfree.data.DefaultKeyedValues2D.this.columnKeys.remove(columnKey);\n+\t\tsetValue(null, columnKey, columnKey);\n \t}\n \n \tpublic void clear() {",
    "generation": 1,
    "ingredients": null,
    "patch": "org.jfree.data.category.DefaultCategoryDataset.this.data.removeRow(columnKey)\ngeneration= 1\ningredientScope= LOCAL\noperation: ReplaceOp\nlocation= org.jfree.data.DefaultKeyedValues\nline= 334\nlineSuspiciousness= 1\noriginal statement= if (index < 0) {\n\treturn ;\n}\nfixed statement= if (index < 0) {\n\tthrow new org.jfree.data.UnknownKeyException((\"Key not found: \" + key));\n}\ngeneration= 4\ningredientScope= LOCAL\noperation: InsertBeforeOp\nlocation= org.jfree.data.DefaultKeyedValues\nline= 318\nlineSuspiciousness= 1\noriginal statement= if (index < (org.jfree.data.DefaultKeyedValues.this.keys.size())) {\n\trebuildIndex();\n}\nfixed statement= clear()\ngeneration= 24\ningredientScope= LOCAL\noperation: InsertBeforeOp\nlocation= org.jfree.data.DefaultKeyedValues\nline= 333\nlineSuspiciousness= 1\noriginal statement= int index = getIndex(key)\nfixed statement= org.jfree.data.DefaultKeyedValues.this.indexMap.put(key, new java.lang.Integer(((org.jfree.data.DefaultKeyedValues.this.keys.size()) - 1)))\ngeneration= 976\ningredientScope= LOCAL\noperation: InsertAfterOp\nlocation= org.jfree.data.DefaultKeyedValues2D\nline= 460\nlineSuspiciousness= 0.707\noriginal statement= org.jfree.data.DefaultKeyedValues2D.this.columnKeys.remove(columnKey)\nfixed statement= setValue(null, columnKey, columnKey)",
    "patchLocation": {
        "className": "org.jfree.data.category.DefaultCategoryDataset",
        "line": 351,
        "lineSuspiciousness": 0.5
    },
    "scope": "LOCAL",
    "time": "202",
    "type": "ReplaceOp",
    "variant": 1030
}
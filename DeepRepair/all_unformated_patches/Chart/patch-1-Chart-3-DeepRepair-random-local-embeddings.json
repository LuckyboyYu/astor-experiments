{
    "buggyStatement": "for (int index = start; index <= end; index++) {\n\torg.jfree.data.time.TimeSeriesDataItem item = ((org.jfree.data.time.TimeSeriesDataItem) (org.jfree.data.time.TimeSeries.this.data.get(index)));\n\torg.jfree.data.time.TimeSeriesDataItem clone = ((org.jfree.data.time.TimeSeriesDataItem) (item.clone()));\n\ttry {\n\t\tcopy.add(clone);\n\t} catch (org.jfree.data.general.SeriesException e) {\n\t\te.printStackTrace();\n\t}\n}\nfixed statement= if (end < start) {\n\tthrow new java.lang.IllegalArgumentException(\"Requires start <= end.\");\n}\ngeneration= 2\ningredientScope= LOCAL\noperation: InsertBeforeOp\nlocation= org.jfree.data.time.TimeSeries\nline= 605\nlineSuspiciousness= 0.152\noriginal statement= org.jfree.data.time.TimeSeries.this.data.add(item)",
    "diffpatch": "--- /local/scr/mtufano/Chart/3/b/random-local-embeddings/1/AstorMain-b/src/default/org/jfree/data/time/TimeSeries.java\t\n+++ /local/scr/mtufano/Chart/3/b/random-local-embeddings/1/AstorMain-b/src/variant-38/org/jfree/data/time/TimeSeries.java\t\n@@ -218,6 +218,7 @@\n \t\t}else {\n \t\t\torg.jfree.data.time.RegularTimePeriod last = getTimePeriod(((getItemCount()) - 1));\n \t\t\tif ((item.getPeriod().compareTo(last)) > 0) {\n+\t\t\t\tfindBoundsByIteration();\n \t\t\t\torg.jfree.data.time.TimeSeries.this.data.add(item);\n \t\t\t\tadded = true;\n \t\t\t}else {\n@@ -481,6 +482,9 @@\n \t\t\t\t\te.printStackTrace();\n \t\t\t\t}\n \t\t\t}\n+\t\t\tif (end < start) {\n+\t\t\t\tthrow new java.lang.IllegalArgumentException(\"Requires start <= end.\");\n+\t\t\t}\n \t\t}\n \t\treturn copy;\n \t}\n\n--- /local/scr/mtufano/Chart/3/b/random-local-embeddings/1/AstorMain-b/src/default/org/jfree/data/time/TimeSeries.java\t\n+++ /local/scr/mtufano/Chart/3/b/random-local-embeddings/1/AstorMain-b/src/variant-38/org/jfree/data/time/TimeSeries.java\t\n@@ -218,6 +218,7 @@\n \t\t}else {\n \t\t\torg.jfree.data.time.RegularTimePeriod last = getTimePeriod(((getItemCount()) - 1));\n \t\t\tif ((item.getPeriod().compareTo(last)) > 0) {\n+\t\t\t\tfindBoundsByIteration();\n \t\t\t\torg.jfree.data.time.TimeSeries.this.data.add(item);\n \t\t\t\tadded = true;\n \t\t\t}else {\n@@ -481,6 +482,9 @@\n \t\t\t\t\te.printStackTrace();\n \t\t\t\t}\n \t\t\t}\n+\t\t\tif (end < start) {\n+\t\t\t\tthrow new java.lang.IllegalArgumentException(\"Requires start <= end.\");\n+\t\t\t}\n \t\t}\n \t\treturn copy;\n \t}",
    "generation": 2,
    "ingredients": null,
    "patch": "if (end < start) {\n\tthrow new java.lang.IllegalArgumentException(\"Requires start <= end.\");\n}\ngeneration= 2\ningredientScope= LOCAL\noperation: InsertBeforeOp\nlocation= org.jfree.data.time.TimeSeries\nline= 605\nlineSuspiciousness= 0.152\noriginal statement= org.jfree.data.time.TimeSeries.this.data.add(item)\nfixed statement= findBoundsByIteration()",
    "patchLocation": {
        "className": "org.jfree.data.time.TimeSeries",
        "line": 1059,
        "lineSuspiciousness": 0.577
    },
    "scope": "LOCAL",
    "time": "29",
    "type": "InsertAfterOp",
    "variant": 38
}
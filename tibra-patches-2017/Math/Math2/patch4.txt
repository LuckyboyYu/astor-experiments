--- /original/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	
+++ /fixed/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	
@@ -55,9 +55,15 @@
 			}
 			k = 1.0 / k;
 			tmp = mu + (k * sigma);
-			if (tmp < upper) {
-				upper = ((int) (java.lang.Math.ceil(tmp))) - 1;
+			if (upper < 0) {
+				k = 0.0;
+			}else
+				if (upper >= upper) {
+					k = 1.0;
+				}else {
+					k = 1.0 - (org.apache.commons.math3.special.Beta.regularizedBeta(mu, (upper + 1.0), (upper - upper)));
 			}
+
 		}
 		return solveInverseCumulativeProbability(p, lower, upper);
 	}
--- /original/org/jfree/chart/plot/CategoryPlot.java	
+++ /fixed/org/jfree/chart/plot/CategoryPlot.java	
@@ -1339,14 +1339,14 @@
 			for (int pass = 0; pass < passCount; pass++) {
 				if ((org.jfree.chart.plot.CategoryPlot.this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
 					for (int column = 0; column < columnCount; column++) {
-						if ((org.jfree.chart.plot.CategoryPlot.this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
-							for (int row = 0; row < rowCount; row++) {
-								renderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);
-							}
-						}else {
-							for (int row = rowCount - 1; row >= 0; row--) {
-								renderer.drawItem(g2, state, dataArea, org.jfree.chart.plot.CategoryPlot.this, domainAxis, rangeAxis, currentDataset, row, column, pass);
+						if ((org.jfree.chart.plot.CategoryPlot.this.backgroundDomainMarkers) != null) {
+							java.util.Set keys = org.jfree.chart.plot.CategoryPlot.this.backgroundDomainMarkers.keySet();
+							java.util.Iterator iterator = keys.iterator();
+							while (iterator.hasNext()) {
+								java.lang.Integer key = ((java.lang.Integer) (iterator.next()));
+								clearDomainMarkers(key.intValue());
 							}
+							org.jfree.chart.plot.CategoryPlot.this.backgroundDomainMarkers.clear();
 						}
 					}
 				}else {